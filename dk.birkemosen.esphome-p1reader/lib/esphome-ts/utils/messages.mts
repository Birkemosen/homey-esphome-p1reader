import {
  HelloRequestSchema,
  HelloResponseSchema,
  ConnectRequestSchema,
  ConnectResponseSchema,
  DisconnectRequestSchema,
  DisconnectResponseSchema,
  PingRequestSchema,
  PingResponseSchema,
  DeviceInfoRequestSchema,
  DeviceInfoResponseSchema,
  ListEntitiesRequestSchema,
  ListEntitiesBinarySensorResponseSchema,
  ListEntitiesCoverResponseSchema,
  ListEntitiesFanResponseSchema,
  ListEntitiesLightResponseSchema,
  ListEntitiesSensorResponseSchema,
  ListEntitiesSwitchResponseSchema,
  ListEntitiesTextSensorResponseSchema,
  ListEntitiesDoneResponseSchema,
  SubscribeStatesRequestSchema,
  BinarySensorStateResponseSchema,
  CoverStateResponseSchema,
  FanStateResponseSchema,
  LightStateResponseSchema,
  SensorStateResponseSchema,
  SwitchStateResponseSchema,
  TextSensorStateResponseSchema,
  SubscribeLogsRequestSchema,
  SubscribeLogsResponseSchema,
  CoverCommandRequestSchema,
  FanCommandRequestSchema,
  LightCommandRequestSchema,
  SwitchCommandRequestSchema,
  SubscribeHomeassistantServicesRequestSchema,
  HomeassistantServiceResponseSchema,
  GetTimeRequestSchema,
  GetTimeResponseSchema,
  SubscribeHomeAssistantStatesRequestSchema,
  SubscribeHomeAssistantStateResponseSchema,
  HomeAssistantStateResponseSchema,
  ListEntitiesServicesResponseSchema,
  ExecuteServiceRequestSchema,
  ListEntitiesCameraResponseSchema,
  CameraImageResponseSchema,
  CameraImageRequestSchema,
  ListEntitiesClimateResponseSchema,
  ClimateStateResponseSchema,
  ClimateCommandRequestSchema,
  ListEntitiesNumberResponseSchema,
  NumberStateResponseSchema,
  NumberCommandRequestSchema,
  ListEntitiesSelectResponseSchema,
  SelectStateResponseSchema,
  SelectCommandRequestSchema,
  ListEntitiesLockResponseSchema,
  LockStateResponseSchema,
  LockCommandRequestSchema,
  ListEntitiesButtonResponseSchema,
  ButtonCommandRequestSchema,
  ListEntitiesMediaPlayerResponseSchema,
  MediaPlayerStateResponseSchema,
  MediaPlayerCommandRequestSchema,
  SubscribeBluetoothLEAdvertisementsRequestSchema,
  BluetoothLEAdvertisementResponseSchema,
  BluetoothDeviceRequestSchema,
  BluetoothDeviceConnectionResponseSchema,
  BluetoothGATTGetServicesRequestSchema,
  BluetoothGATTGetServicesResponseSchema,
  BluetoothGATTGetServicesDoneResponseSchema,
  BluetoothGATTReadRequestSchema,
  BluetoothGATTReadResponseSchema,
  BluetoothGATTWriteRequestSchema,
  BluetoothGATTReadDescriptorRequestSchema,
  BluetoothGATTWriteDescriptorRequestSchema,
  BluetoothGATTNotifyRequestSchema,
  BluetoothGATTNotifyDataResponseSchema,
  SubscribeBluetoothConnectionsFreeRequestSchema,
  BluetoothConnectionsFreeResponseSchema,
  BluetoothGATTErrorResponseSchema,
  BluetoothGATTWriteResponseSchema,
  BluetoothGATTNotifyResponseSchema,
  BluetoothDevicePairingResponseSchema,
  BluetoothDeviceUnpairingResponseSchema,
  UnsubscribeBluetoothLEAdvertisementsRequestSchema,
  BluetoothDeviceClearCacheResponseSchema,
  SubscribeVoiceAssistantRequestSchema,
  VoiceAssistantRequestSchema,
  VoiceAssistantResponseSchema,
  VoiceAssistantEventResponseSchema,
  BluetoothLERawAdvertisementsResponseSchema,
  ListEntitiesAlarmControlPanelResponseSchema,
  AlarmControlPanelStateResponseSchema,
  AlarmControlPanelCommandRequestSchema,
  ListEntitiesTextResponseSchema,
  TextStateResponseSchema,
  TextCommandRequestSchema,
  ListEntitiesDateResponseSchema,
  DateStateResponseSchema,
  DateCommandRequestSchema,
  ListEntitiesTimeResponseSchema,
  TimeStateResponseSchema,
  TimeCommandRequestSchema,
  VoiceAssistantAudioSchema,
  ListEntitiesEventResponseSchema,
  EventResponseSchema,
  ListEntitiesValveResponseSchema,
  ValveStateResponseSchema,
  ValveCommandRequestSchema,
  ListEntitiesDateTimeResponseSchema,
  DateTimeStateResponseSchema,
  DateTimeCommandRequestSchema,
  VoiceAssistantTimerEventResponseSchema,
  ListEntitiesUpdateResponseSchema,
  UpdateStateResponseSchema,
  UpdateCommandRequestSchema,
  VoiceAssistantAnnounceRequestSchema,
  VoiceAssistantAnnounceFinishedSchema,
  VoiceAssistantConfigurationRequestSchema,
  VoiceAssistantConfigurationResponseSchema,
  VoiceAssistantSetConfigurationSchema,
  NoiseEncryptionSetKeyRequestSchema,
  NoiseEncryptionSetKeyResponseSchema,
} from '../protobuf/api_pb.mts';
import { toBinary } from '@bufbuild/protobuf';

// Define interfaces for message types and ID mappings
export interface Messages {
  [key: string]: any;
}

export interface IdToType {
  [key: number]: string;
}

export interface TypeToId {
  [key: string]: number;
}

// Create empty message container for proto objects
export const pb: Messages = {};

// Define the message type mappings - all the valid message types
export enum MessageTypes {
  HelloRequest = 1,
  HelloResponse = 2,
  ConnectRequest = 3,
  ConnectResponse = 4,
  DisconnectRequest = 5,
  DisconnectResponse = 6,
  PingRequest = 7,
  PingResponse = 8,
  DeviceInfoRequest = 9,
  DeviceInfoResponse = 10,
  ListEntitiesRequest = 11,
  ListEntitiesBinarySensorResponse = 12,
  ListEntitiesCoverResponse = 13,
  ListEntitiesFanResponse = 14,
  ListEntitiesLightResponse = 15,
  ListEntitiesSensorResponse = 16,
  ListEntitiesSwitchResponse = 17,
  ListEntitiesTextSensorResponse = 18,
  ListEntitiesDoneResponse = 19,
  SubscribeStatesRequest = 20,
  BinarySensorStateResponse = 21,
  CoverStateResponse = 22,
  FanStateResponse = 23,
  LightStateResponse = 24,
  SensorStateResponse = 25,
  SwitchStateResponse = 26,
  TextSensorStateResponse = 27,
  SubscribeLogsRequest = 28,
  SubscribeLogsResponse = 29,
  CoverCommandRequest = 30,
  FanCommandRequest = 31,
  LightCommandRequest = 32,
  SwitchCommandRequest = 33,
  SubscribeHomeassistantServicesRequest = 34,
  HomeassistantServiceResponse = 35,
  GetTimeRequest = 36,
  GetTimeResponse = 37,
  SubscribeHomeAssistantStatesRequest = 38,
  SubscribeHomeAssistantStateResponse = 39,
  HomeAssistantStateResponse = 40,
  ListEntitiesServicesResponse = 41,
  ExecuteServiceRequest = 42,
  ListEntitiesCameraResponse = 43,
  CameraImageResponse = 44,
  CameraImageRequest = 45,
  ListEntitiesClimateResponse = 46,
  ClimateStateResponse = 47,
  ClimateCommandRequest = 48,
  ListEntitiesNumberResponse = 49,
  NumberStateResponse = 50,
  NumberCommandRequest = 51,
  ListEntitiesSelectResponse = 52,
  SelectStateResponse = 53,
  SelectCommandRequest = 54,
  ListEntitiesLockResponse = 55,
  LockStateResponse = 56,
  LockCommandRequest = 57,
  ListEntitiesButtonResponse = 58,
  ButtonCommandRequest = 59,
  ListEntitiesMediaPlayerResponse = 60,
  MediaPlayerStateResponse = 61,
  MediaPlayerCommandRequest = 62,
  SubscribeBluetoothLEAdvertisementsRequest = 63,
  BluetoothLEAdvertisementResponse = 64,
  BluetoothDeviceRequest = 65,
  BluetoothDeviceConnectionResponse = 66,
  BluetoothGATTGetServicesRequest = 67,
  BluetoothGATTGetServicesResponse = 68,
  BluetoothGATTGetServicesDoneResponse = 69,
  BluetoothGATTReadRequest = 70,
  BluetoothGATTReadResponse = 71,
  BluetoothGATTWriteRequest = 72,
  BluetoothGATTReadDescriptorRequest = 73,
  BluetoothGATTWriteDescriptorRequest = 74,
  BluetoothGATTNotifyRequest = 75,
  BluetoothGATTNotifyDataResponse = 76,
  SubscribeBluetoothConnectionsFreeRequest = 77,
  BluetoothConnectionsFreeResponse = 78,
  BluetoothGATTErrorResponse = 79,
  BluetoothGATTWriteResponse = 80,
  BluetoothGATTNotifyResponse = 81,
  BluetoothDevicePairingResponse = 82,
  BluetoothDeviceUnpairingResponse = 83,
  UnsubscribeBluetoothLEAdvertisementsRequest = 84,
  BluetoothDeviceClearCacheResponse = 85,
  SubscribeVoiceAssistantRequest = 86,
  VoiceAssistantRequest = 87,
  VoiceAssistantResponse = 88,
  VoiceAssistantEventResponse = 89,
  BluetoothLERawAdvertisementsResponse = 90,
  ListEntitiesAlarmControlPanelResponse = 91,
  AlarmControlPanelStateResponse = 92,
  AlarmControlPanelCommandRequest = 93,
  ListEntitiesTextResponse = 94,
  TextStateResponse = 95,
  TextCommandRequest = 96,
  ListEntitiesDateResponse = 97,
  DateStateResponse = 98,
  DateCommandRequest = 99,
  ListEntitiesTimeResponse = 100,
  TimeStateResponse = 101,
  TimeCommandRequest = 102,
  VoiceAssistantAudio = 103,
  ListEntitiesEventResponse = 104,
  EventResponse = 105,
  ListEntitiesValveResponse = 106,
  ValveStateResponse = 107,
  ValveCommandRequest = 108,
  ListEntitiesDateTimeResponse = 109,
  DateTimeStateResponse = 110,
  DateTimeCommandRequest = 111,
  VoiceAssistantTimerEventResponse = 112,
  ListEntitiesUpdateResponse = 113,
  UpdateStateResponse = 114,
  UpdateCommandRequest = 115,
  VoiceAssistantAnnounceRequest = 116,
  VoiceAssistantAnnounceFinished = 117,
  VoiceAssistantConfigurationRequest = 118,
  VoiceAssistantConfigurationResponse = 119,
  VoiceAssistantSetConfiguration = 120,
  NoiseEncryptionSetKeyRequest = 121,
  NoiseEncryptionSetKeyResponse = 122,
}

// Create the id_to_type mapping
export const id_to_type: IdToType = {
  1: 'HelloRequest',
  2: 'HelloResponse',
  3: 'ConnectRequest',
  4: 'ConnectResponse',
  5: 'DisconnectRequest',
  6: 'DisconnectResponse',
  7: 'PingRequest',
  8: 'PingResponse',
  9: 'DeviceInfoRequest',
  10: 'DeviceInfoResponse',
  11: 'ListEntitiesRequest',
  12: 'ListEntitiesBinarySensorResponse',
  13: 'ListEntitiesCoverResponse',
  14: 'ListEntitiesFanResponse',
  15: 'ListEntitiesLightResponse',
  16: 'ListEntitiesSensorResponse',
  17: 'ListEntitiesSwitchResponse',
  18: 'ListEntitiesTextSensorResponse',
  19: 'ListEntitiesDoneResponse',
  20: 'SubscribeStatesRequest',
  21: 'BinarySensorStateResponse',
  22: 'CoverStateResponse',
  23: 'FanStateResponse',
  24: 'LightStateResponse',
  25: 'SensorStateResponse',
  26: 'SwitchStateResponse',
  27: 'TextSensorStateResponse',
  28: 'SubscribeLogsRequest',
  29: 'SubscribeLogsResponse',
  30: 'CoverCommandRequest',
  31: 'FanCommandRequest',
  32: 'LightCommandRequest',
  33: 'SwitchCommandRequest',
  34: 'SubscribeHomeassistantServicesRequest',
  35: 'HomeassistantServiceResponse',
  36: 'GetTimeRequest',
  37: 'GetTimeResponse',
  38: 'SubscribeHomeAssistantStatesRequest',
  39: 'SubscribeHomeAssistantStateResponse',
  40: 'HomeAssistantStateResponse',
  41: 'ListEntitiesServicesResponse',
  42: 'ExecuteServiceRequest',
  43: 'ListEntitiesCameraResponse',
  44: 'CameraImageResponse',
  45: 'CameraImageRequest',
  46: 'ListEntitiesClimateResponse',
  47: 'ClimateStateResponse',
  48: 'ClimateCommandRequest',
  49: 'ListEntitiesNumberResponse',
  50: 'NumberStateResponse',
  51: 'NumberCommandRequest',
  52: 'ListEntitiesSelectResponse',
  53: 'SelectStateResponse',
  54: 'SelectCommandRequest',
  55: 'ListEntitiesLockResponse',
  56: 'LockStateResponse',
  57: 'LockCommandRequest',
  58: 'ListEntitiesButtonResponse',
  59: 'ButtonCommandRequest',
  60: 'ListEntitiesMediaPlayerResponse',
  61: 'MediaPlayerStateResponse',
  62: 'MediaPlayerCommandRequest',
  63: 'SubscribeBluetoothLEAdvertisementsRequest',
  64: 'BluetoothLEAdvertisementResponse',
  65: 'BluetoothDeviceRequest',
  66: 'BluetoothDeviceConnectionResponse',
  67: 'BluetoothGATTGetServicesRequest',
  68: 'BluetoothGATTGetServicesResponse',
  69: 'BluetoothGATTGetServicesDoneResponse',
  70: 'BluetoothGATTReadRequest',
  71: 'BluetoothGATTReadResponse',
  72: 'BluetoothGATTWriteRequest',
  73: 'BluetoothGATTReadDescriptorRequest',
  74: 'BluetoothGATTWriteDescriptorRequest',
  75: 'BluetoothGATTNotifyRequest',
  76: 'BluetoothGATTNotifyDataResponse',
  77: 'SubscribeBluetoothConnectionsFreeRequest',
  78: 'BluetoothConnectionsFreeResponse',
  79: 'BluetoothGATTErrorResponse',
  80: 'BluetoothGATTWriteResponse',
  81: 'BluetoothGATTNotifyResponse',
  82: 'BluetoothDevicePairingResponse',
  83: 'BluetoothDeviceUnpairingResponse',
  84: 'UnsubscribeBluetoothLEAdvertisementsRequest',
  85: 'BluetoothDeviceClearCacheResponse',
  86: 'SubscribeVoiceAssistantRequest',
  87: 'VoiceAssistantRequest',
  88: 'VoiceAssistantResponse',
  89: 'VoiceAssistantEventResponse',
  90: 'BluetoothLERawAdvertisementsResponse',
  91: 'ListEntitiesAlarmControlPanelResponse',
  92: 'AlarmControlPanelStateResponse',
  93: 'AlarmControlPanelCommandRequest',
  94: 'ListEntitiesTextResponse',
  95: 'TextStateResponse',
  96: 'TextCommandRequest',
  97: 'ListEntitiesDateResponse',
  98: 'DateStateResponse',
  99: 'DateCommandRequest',
  100: 'ListEntitiesTimeResponse',
  101: 'TimeStateResponse',
  102: 'TimeCommandRequest',
  103: 'VoiceAssistantAudio',
  104: 'ListEntitiesEventResponse',
  105: 'EventResponse',
  106: 'ListEntitiesValveResponse',
  107: 'ValveStateResponse',
  108: 'ValveCommandRequest',
  109: 'ListEntitiesDateTimeResponse',
  110: 'DateTimeStateResponse',
  111: 'DateTimeCommandRequest',
  112: 'VoiceAssistantTimerEventResponse',
  113: 'ListEntitiesUpdateResponse',
  114: 'UpdateStateResponse',
  115: 'UpdateCommandRequest',
  116: 'VoiceAssistantAnnounceRequest',
  117: 'VoiceAssistantAnnounceFinished',
  118: 'VoiceAssistantConfigurationRequest',
  119: 'VoiceAssistantConfigurationResponse',
  120: 'VoiceAssistantSetConfiguration',
  121: 'NoiseEncryptionSetKeyRequest',
  122: 'NoiseEncryptionSetKeyResponse',
};

// Create the type_to_id mapping by reverse mapping id_to_type
export const type_to_id: TypeToId = {};
for (const [id, type] of Object.entries(id_to_type)) {
  type_to_id[type] = parseInt(id);
}

// Map the schema objects to their corresponding message type in pb
const schemaMap: Record<string, any> = {
  'HelloRequest': HelloRequestSchema,
  'HelloResponse': HelloResponseSchema,
  'ConnectRequest': ConnectRequestSchema,
  'ConnectResponse': ConnectResponseSchema,
  'DisconnectRequest': DisconnectRequestSchema,
  'DisconnectResponse': DisconnectResponseSchema,
  'PingRequest': PingRequestSchema,
  'PingResponse': PingResponseSchema,
  'DeviceInfoRequest': DeviceInfoRequestSchema,
  'DeviceInfoResponse': DeviceInfoResponseSchema,
  'ListEntitiesRequest': ListEntitiesRequestSchema,
  'ListEntitiesBinarySensorResponse': ListEntitiesBinarySensorResponseSchema,
  'ListEntitiesCoverResponse': ListEntitiesCoverResponseSchema,
  'ListEntitiesFanResponse': ListEntitiesFanResponseSchema,
  'ListEntitiesLightResponse': ListEntitiesLightResponseSchema,
  'ListEntitiesSensorResponse': ListEntitiesSensorResponseSchema,
  'ListEntitiesSwitchResponse': ListEntitiesSwitchResponseSchema,
  'ListEntitiesTextSensorResponse': ListEntitiesTextSensorResponseSchema,
  'ListEntitiesDoneResponse': ListEntitiesDoneResponseSchema,
  'SubscribeStatesRequest': SubscribeStatesRequestSchema,
  'BinarySensorStateResponse': BinarySensorStateResponseSchema,
  'CoverStateResponse': CoverStateResponseSchema,
  'FanStateResponse': FanStateResponseSchema,
  'LightStateResponse': LightStateResponseSchema,
  'SensorStateResponse': SensorStateResponseSchema,
  'SwitchStateResponse': SwitchStateResponseSchema,
  'TextSensorStateResponse': TextSensorStateResponseSchema,
  'SubscribeLogsRequest': SubscribeLogsRequestSchema,
  'SubscribeLogsResponse': SubscribeLogsResponseSchema,
  'CoverCommandRequest': CoverCommandRequestSchema,
  'FanCommandRequest': FanCommandRequestSchema,
  'LightCommandRequest': LightCommandRequestSchema,
  'SwitchCommandRequest': SwitchCommandRequestSchema,
  'SubscribeHomeassistantServicesRequest': SubscribeHomeassistantServicesRequestSchema,
  'HomeassistantServiceResponse': HomeassistantServiceResponseSchema,
  'GetTimeRequest': GetTimeRequestSchema,
  'GetTimeResponse': GetTimeResponseSchema,
  'SubscribeHomeAssistantStatesRequest': SubscribeHomeAssistantStatesRequestSchema,
  'SubscribeHomeAssistantStateResponse': SubscribeHomeAssistantStateResponseSchema,
  'HomeAssistantStateResponse': HomeAssistantStateResponseSchema,
  'ListEntitiesServicesResponse': ListEntitiesServicesResponseSchema,
  'ExecuteServiceRequest': ExecuteServiceRequestSchema,
  'ListEntitiesCameraResponse': ListEntitiesCameraResponseSchema,
  'CameraImageResponse': CameraImageResponseSchema,
  'CameraImageRequest': CameraImageRequestSchema,
  'ListEntitiesClimateResponse': ListEntitiesClimateResponseSchema,
  'ClimateStateResponse': ClimateStateResponseSchema,
  'ClimateCommandRequest': ClimateCommandRequestSchema,
  'ListEntitiesNumberResponse': ListEntitiesNumberResponseSchema,
  'NumberStateResponse': NumberStateResponseSchema,
  'NumberCommandRequest': NumberCommandRequestSchema,
  'ListEntitiesSelectResponse': ListEntitiesSelectResponseSchema,
  'SelectStateResponse': SelectStateResponseSchema,
  'SelectCommandRequest': SelectCommandRequestSchema,
  'ListEntitiesLockResponse': ListEntitiesLockResponseSchema,
  'LockStateResponse': LockStateResponseSchema,
  'LockCommandRequest': LockCommandRequestSchema,
  'ListEntitiesButtonResponse': ListEntitiesButtonResponseSchema,
  'ButtonCommandRequest': ButtonCommandRequestSchema,
  'ListEntitiesMediaPlayerResponse': ListEntitiesMediaPlayerResponseSchema,
  'MediaPlayerStateResponse': MediaPlayerStateResponseSchema,
  'MediaPlayerCommandRequest': MediaPlayerCommandRequestSchema,
  'SubscribeBluetoothLEAdvertisementsRequest': SubscribeBluetoothLEAdvertisementsRequestSchema,
  'BluetoothLEAdvertisementResponse': BluetoothLEAdvertisementResponseSchema,
  'BluetoothDeviceRequest': BluetoothDeviceRequestSchema,
  'BluetoothDeviceConnectionResponse': BluetoothDeviceConnectionResponseSchema,
  'BluetoothGATTGetServicesRequest': BluetoothGATTGetServicesRequestSchema,
  'BluetoothGATTGetServicesResponse': BluetoothGATTGetServicesResponseSchema,
  'BluetoothGATTGetServicesDoneResponse': BluetoothGATTGetServicesDoneResponseSchema,
  'BluetoothGATTReadRequest': BluetoothGATTReadRequestSchema,
  'BluetoothGATTReadResponse': BluetoothGATTReadResponseSchema,
  'BluetoothGATTWriteRequest': BluetoothGATTWriteRequestSchema,
  'BluetoothGATTReadDescriptorRequest': BluetoothGATTReadDescriptorRequestSchema,
  'BluetoothGATTWriteDescriptorRequest': BluetoothGATTWriteDescriptorRequestSchema,
  'BluetoothGATTNotifyRequest': BluetoothGATTNotifyRequestSchema,
  'BluetoothGATTNotifyDataResponse': BluetoothGATTNotifyDataResponseSchema,
  'SubscribeBluetoothConnectionsFreeRequest': SubscribeBluetoothConnectionsFreeRequestSchema,
  'BluetoothConnectionsFreeResponse': BluetoothConnectionsFreeResponseSchema,
  'BluetoothGATTErrorResponse': BluetoothGATTErrorResponseSchema,
  'BluetoothGATTWriteResponse': BluetoothGATTWriteResponseSchema,
  'BluetoothGATTNotifyResponse': BluetoothGATTNotifyResponseSchema,
  'BluetoothDevicePairingResponse': BluetoothDevicePairingResponseSchema,
  'BluetoothDeviceUnpairingResponse': BluetoothDeviceUnpairingResponseSchema,
  'UnsubscribeBluetoothLEAdvertisementsRequest': UnsubscribeBluetoothLEAdvertisementsRequestSchema,
  'BluetoothDeviceClearCacheResponse': BluetoothDeviceClearCacheResponseSchema,
  'SubscribeVoiceAssistantRequest': SubscribeVoiceAssistantRequestSchema,
  'VoiceAssistantRequest': VoiceAssistantRequestSchema,
  'VoiceAssistantResponse': VoiceAssistantResponseSchema,
  'VoiceAssistantEventResponse': VoiceAssistantEventResponseSchema,
  'BluetoothLERawAdvertisementsResponse': BluetoothLERawAdvertisementsResponseSchema,
  'ListEntitiesAlarmControlPanelResponse': ListEntitiesAlarmControlPanelResponseSchema,
  'AlarmControlPanelStateResponse': AlarmControlPanelStateResponseSchema,
  'AlarmControlPanelCommandRequest': AlarmControlPanelCommandRequestSchema,
  'ListEntitiesTextResponse': ListEntitiesTextResponseSchema,
  'TextStateResponse': TextStateResponseSchema,
  'TextCommandRequest': TextCommandRequestSchema,
  'ListEntitiesDateResponse': ListEntitiesDateResponseSchema,
  'DateStateResponse': DateStateResponseSchema,
  'DateCommandRequest': DateCommandRequestSchema,
  'ListEntitiesTimeResponse': ListEntitiesTimeResponseSchema,
  'TimeStateResponse': TimeStateResponseSchema,
  'TimeCommandRequest': TimeCommandRequestSchema,
  'VoiceAssistantAudio': VoiceAssistantAudioSchema,
  'ListEntitiesEventResponse': ListEntitiesEventResponseSchema,
  'EventResponse': EventResponseSchema,
  'ListEntitiesValveResponse': ListEntitiesValveResponseSchema,
  'ValveStateResponse': ValveStateResponseSchema,
  'ValveCommandRequest': ValveCommandRequestSchema,
  'ListEntitiesDateTimeResponse': ListEntitiesDateTimeResponseSchema,
  'DateTimeStateResponse': DateTimeStateResponseSchema,
  'DateTimeCommandRequest': DateTimeCommandRequestSchema,
  'VoiceAssistantTimerEventResponse': VoiceAssistantTimerEventResponseSchema,
  'ListEntitiesUpdateResponse': ListEntitiesUpdateResponseSchema,
  'UpdateStateResponse': UpdateStateResponseSchema,
  'UpdateCommandRequest': UpdateCommandRequestSchema,
  'VoiceAssistantAnnounceRequest': VoiceAssistantAnnounceRequestSchema,
  'VoiceAssistantAnnounceFinished': VoiceAssistantAnnounceFinishedSchema,
  'VoiceAssistantConfigurationRequest': VoiceAssistantConfigurationRequestSchema,
  'VoiceAssistantConfigurationResponse': VoiceAssistantConfigurationResponseSchema,
  'VoiceAssistantSetConfiguration': VoiceAssistantSetConfigurationSchema,
  'NoiseEncryptionSetKeyRequest': NoiseEncryptionSetKeyRequestSchema,
  'NoiseEncryptionSetKeyResponse': NoiseEncryptionSetKeyResponseSchema,
};

// Populate the pb object with schema objects and add type and id
for (const [type, schema] of Object.entries(schemaMap)) {
  pb[type] = schema;
  if (schema) {
    // Add type and id properties to each schema for easy reference
    (schema as any).type = type;
    (schema as any).id = type_to_id[type];
  }
}

// Export for convenience
export const MESSAGE_TYPE_TO_PROTO: Record<number, any> = {};
for (const [id, type] of Object.entries(id_to_type)) {
  MESSAGE_TYPE_TO_PROTO[Number(id)] = schemaMap[type];
}

export const SUBSCRIBE_STATES_RESPONSE_TYPES = [
  MessageTypes.BinarySensorStateResponse,
  MessageTypes.CoverStateResponse,
  MessageTypes.FanStateResponse,
  MessageTypes.LightStateResponse,
  MessageTypes.SensorStateResponse,
  MessageTypes.SwitchStateResponse,
  MessageTypes.TextSensorStateResponse,
  MessageTypes.ClimateStateResponse,
  MessageTypes.NumberStateResponse,
  MessageTypes.SelectStateResponse,
  MessageTypes.LockStateResponse,
  MessageTypes.MediaPlayerStateResponse,
  MessageTypes.AlarmControlPanelStateResponse,
  MessageTypes.TextStateResponse,
  MessageTypes.DateStateResponse,
  MessageTypes.TimeStateResponse,
  MessageTypes.DateTimeStateResponse,
  MessageTypes.UpdateStateResponse,
] as const;

// Add a helper function to properly work with @bufbuild/protobuf's toBinary function
export function serializeMessage(message: any): { messageId: number, encodedMessage: Uint8Array } {
  let messageId = 0;
  let schema = null;
  
  // Method 1: Use message.constructor.id from augmented message
  if (message.constructor && typeof message.constructor.id === 'number') {
    messageId = message.constructor.id;
    schema = MESSAGE_TYPE_TO_PROTO[messageId];
  } 
  // Method 2: Try to find by type name
  else if (message.constructor && message.constructor.type) {
    const typeName = message.constructor.type;
    if (type_to_id[typeName] !== undefined) {
      messageId = type_to_id[typeName];
      schema = MESSAGE_TYPE_TO_PROTO[messageId];
    }
  }
  // Method 3: Try to find by message.$type
  else if (message.$type && message.$type.typeName) {
    const typeName = message.$type.typeName;
    // Sometimes the typeName includes a namespace prefix, strip it
    const baseName = typeName.includes('.') ? typeName.split('.').pop() : typeName;
    
    if (baseName && type_to_id[baseName] !== undefined) {
      messageId = type_to_id[baseName];
      schema = MESSAGE_TYPE_TO_PROTO[messageId];
    }
  }
  
  if (!messageId || !schema) {
    throw new Error('Cannot determine message ID or schema');
  }
  
  // Use the standard toBinary method for serialization
  const encodedMessage = toBinary(schema, message);
  
  return { messageId, encodedMessage };
}

// Add a helper function to create the frame with header
export function createMessageFrame(messageId: number, encodedMessage: Uint8Array): Uint8Array {
  const messageLength = encodedMessage.length;
  
  // Create the frame with header
  return new Uint8Array([
    (messageId >> 8) & 255,
    messageId & 255,
    (messageLength >> 8) & 255,
    messageLength & 255,
    ...encodedMessage
  ]);
} 